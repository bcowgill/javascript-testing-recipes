// Node assertion function                  Jasmine matcher

assert.strictEqual(actual, expected)        expect(actual).toBe(expected)
assert.notStrictEqual(actual, expected)     expect(actual).not.toBe(expected)

assert.deepEqual(actual, expected)          expect(actual).toEqual(expected)
assert.notDeepEqual(actual, expected)       expect(actual).not.toEqual(expected)

assert.equal(actual, expected)              // no analog : actual == expected
assert.notEqual(actual, expected)           // no analog : actual != expected

// Node assertion function                  Chai chain

assert.strictEqual(actual, expected)        chai.expect(actual).to.equal(expected)
assert.notStrictEqual(actual, expected)     chai.expect(actual).to.not.equal(expected)

assert.deepEqual(actual, expected)          chai.expect(actual).to.deep.equal(expected)
assert.notDeepEqual(actual, expected)       chai.expect(actual).to.not.deep.equal(expected)

assert.equal(actual, expected)              // no analog
assert.notEqual(actual, expected)           // no analog

// Node assertion function                  QUnit test function

assert.strictEqual(actual, expected)        strictEqual(actual, expected)
assert.notStrictEqual(actual, expected)     notStrictEqual(actual, expected)

assert.deepEqual(actual, expected)          deepEqual(actual, expected)
assert.notDeepEqual(actual, expected)       notDeepEqual(actual, expected)

assert.equal(actual, expected)              equal(actual, expected)
assert.notEqual(actual, expected)           notEqual(actual, expected)

// Node assertion function                  jstest assertion function

assert.strictEqual(actual, expected)        assertSame(actual, expected)
assert.notStrictEqual(actual, expected)     assertNotSame(actual, expected)

assert.deepEqual(actual, expected)          assertEqual(matcher, actual)
assert.notDeepEqual(actual, expected)       assertNotEqual(matcher, actual)

assert.equal(actual, expected)              // no analog
assert.notEqual(actual, expected)           // no analog

